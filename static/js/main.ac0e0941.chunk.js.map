{"version":3,"sources":["Header.js","Table.js","api_link.js","UploadFile.js","FataTable.js","InputForm.js","Pannels.js","FullScreenDialog.js","MyFab.js","ProgressDialog.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","a11yProps","index","id","Header","value","handleChange","classes","className","color","AppBar","position","Toolbar","Typography","variant","Tabs","onChange","aria-label","Tab","label","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","map","headCell","key","align","TableSortLabel","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","props","removeSekected","clsx","component","Tooltip","IconButton","onClick","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","top","EnhancedTable","files","removeFile","React","useState","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","event","target","newSelecteds","n","name","TableBody","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","slice","handleClick","scope","Date","lastModified","toLocaleDateString","edge","e","fName","filter","removeRow","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","api_link","UploadFile","modelName","setOpenDialog","setIsLoading","setPercentCompleted","setStatus","setTitle","valid","setFiles","msg","setName","useEffect","fs","file","includes","console","log","onSubmit","preventDefault","flag","endsWith","RegExp","test","validate","formData","FormData","forEach","append","get","config","headers","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","axios","post","then","res","catch","error","response","data","display","set","Set","fls","multiple","htmlFor","Button","placeholder","DenseTable","rows","Object","keys","cols","col","values","k","v","InputForm","wMsgs","setWMsgs","table_data","setTable_data","regx","split","str","words","readOnly","TabPanel","children","other","hidden","Box","p","Pannels","appBar","marginLeft","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","open","handleClose","models","setModels","Axios","Dialog","fullScreen","onClose","TransitionComponent","List","innerText","model","ListItem","button","Icon","ListItemText","Divider","fab","bottom","right","extendedIcon","MyFab","clazz","Fab","ProgressDialog","loading","status","progress","DialogTitle","DialogContent","CircularProgress","DialogContentText","DialogActions","App","setValue","setOpen","setModel","openDialog","isLoading","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ac0e0941.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Header = ({ value, handleChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} color=\"default\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Word2Vec Utility\r\n          </Typography>\r\n        </Toolbar>\r\n\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Train Model\" {...a11yProps(0)} />\r\n          <Tab label=\"Compare Words\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'File Name',\r\n  },\r\n  { id: 'date', numeric: true, disablePadding: true, label: 'Date Modifed' },\r\n  { id: 'size', numeric: true, disablePadding: true, label: 'File Size' },\r\n  { id: 'delete', numeric: false, disablePadding: true, label: ' ' },\r\n];\r\n\r\nfunction EnhancedTableHead({\r\n  classes,\r\n  onSelectAllClick,\r\n  numSelected,\r\n  rowCount,\r\n}) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >\r\n            <TableSortLabel>{headCell.label}</TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, removeSekected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Files\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={removeSekected}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ files, removeFile, removeSekected }) {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = files.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, files.length - page * rowsPerPage);\r\n\r\n  const remove = () => {\r\n    removeSekected(selected);\r\n    setSelected([]);\r\n  };\r\n\r\n  const removeRow = (fName) => {\r\n    const selectedIndex = selected.indexOf(fName);\r\n\r\n    removeFile([fName]);\r\n    if (selectedIndex >= 0) {\r\n      setSelected(selected.filter((name) => name != fName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          removeSekected={remove}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              rowCount={files.length}\r\n            />\r\n            <TableBody>\r\n              {files.map((row, index) => {\r\n                const isItemSelected = isSelected(row.name);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={index}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onChange={(event) => handleClick(event, row.name)}\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      padding=\"none\"\r\n                    >\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {new Date(row.lastModified).toLocaleDateString()}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.size}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => removeRow(row.name)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={files.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","export const api_link = 'http://127.0.0.1:5000/';\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport EnhancedTable from './Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport { api_link } from './api_link';\r\n\r\nconst UploadFile = ({\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  const [files, setFiles] = useState({ files: [], valid: true });\r\n  const [name, setName] = useState({ name: '', valid: true, msg: '' });\r\n\r\n  useEffect(() => {\r\n    setName({ name: modelName, msg: '', valid: true });\r\n  }, [modelName]);\r\n\r\n  const onChange = (e) => {\r\n    const set = new Set([...files.files, ...e.target.files]);\r\n    const fls = [...set];\r\n    // for(const file of )\r\n    // fls.push(file)\r\n    console.log(fls);\r\n    setFiles({ files: fls, valid: true });\r\n  };\r\n\r\n  const removeFile = (e) => {\r\n    const fs = files.filter((file) => !e.includes(file.name));\r\n    console.log(e, fs);\r\n    setFiles(fs);\r\n  };\r\n\r\n  const validate = () => {\r\n    let flag = true;\r\n    if (files.files.length === 0) {\r\n      setFiles({ files: [], valid: false, msg: 'field is required' });\r\n      flag = false;\r\n    } else {\r\n      for (const f of files.files) {\r\n        if (!f.name.endsWith('.txt')) {\r\n          setFiles({\r\n            files: [],\r\n            valid: false,\r\n            msg: 'all files must .txt format',\r\n          });\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (name.name === '') {\r\n      setName({ name: '', valid: false, msg: 'field is required' });\r\n      flag = false;\r\n    } else {\r\n      const regx = new RegExp('/^[a-zA-Z]+$/');\r\n\r\n      if (regx.test(name.name)) {\r\n        setName({\r\n          name: ``,\r\n          valid: false,\r\n          msg: 'illegal model name must be obly alphabetic characters',\r\n        });\r\n\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    return flag;\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const formData = new FormData();\r\n      files.files.forEach((file) => formData.append(file.name, file));\r\n      formData.append('model', name.name);\r\n      console.log(formData.get('model'));\r\n      setOpenDialog(true);\r\n      setIsLoading(true);\r\n      setTitle('Uploadeding Files');\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          console.log(progressEvent);\r\n          let percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setPercentCompleted(percentCompleted);\r\n          if (percentCompleted == 100) setIsLoading(false);\r\n          setStatus(\r\n            \"Files uploaded suucessefully and is being processed, please wait or comeback later! after the model is finished training you'll see its name in the list.\"\r\n          );\r\n          setTitle('Upload sucessfull');\r\n        },\r\n      };\r\n      axios\r\n        .post(api_link, formData, config)\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          setTitle('Training sucessfull');\r\n          setStatus('Model Trained! Refresh your page to see it in the list.');\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data);\r\n          setTitle('Error');\r\n          setIsLoading(false);\r\n          setStatus(error.response.data);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form className=\"form-inline\" onSubmit={submit}>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              id=\"uplodaer\"\r\n              type=\"file\"\r\n              className={`form-control-file ml-2 ${\r\n                files.valid ? '' : 'is-invalid'\r\n              }`}\r\n              style={{ display: 'none' }}\r\n              onChange={onChange}\r\n              multiple\r\n            />\r\n            <label htmlFor=\"uplodaer\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload Files\r\n              </Button>\r\n            </label>\r\n            {!files.valid ? (\r\n              <div className=\"invalid-feedback\"> {files.msg}.</div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <label htmlFor=\"model\">Model Name:</label>\r\n            <input\r\n              id=\"model\"\r\n              type=\"text\"\r\n              className={`form-control ml-2 ${name.valid ? '' : 'is-invalid'}`}\r\n              placeholder=\"Type model name or choose an exising model.\"\r\n              value={name.name}\r\n              onChange={(e) =>\r\n                setName({ name: e.target.value, valid: true, msg: '' })\r\n              }\r\n            />\r\n\r\n            {!name.valid ? (\r\n              <div className=\"invalid-feedback\"> {name.msg}.</div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary \">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"row mt-5\">\r\n        <EnhancedTable\r\n          files={files.files}\r\n          removeFile={removeFile}\r\n          removeSekected={removeFile}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function DenseTable({ data }) {\r\n  const classes = useStyles();\r\n  const rows = Object.keys(data);\r\n  const cols = Object.keys(data[rows[0]]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            {cols.map((col, index) => (\r\n              <TableCell key={index} align=\"center\">\r\n                {col}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {row}\r\n              </TableCell>\r\n              {Object.values(data[row]).map((k, v) => (\r\n                <TableCell key={v} align=\"center\">\r\n                  {k}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DenseTable from \"./FataTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { api_link } from \"./api_link\";\r\n\r\nconst InputForm = ({\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  const click = (e) => {\r\n    console.log(e.target.name);\r\n  };\r\n  const [name, setName] = useState({ name: \"\", valid: true });\r\n  const [file, setFiles] = useState({ file: null, valid: true });\r\n  const [wMsgs, setWMsgs] = useState({ msg: \"\", valid: true });\r\n  const [table_data, setTable_data] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setName({ name: modelName, valid: true });\r\n  }, [modelName]);\r\n\r\n  const validate = (text) => {\r\n    let flag = true;\r\n    if (!file.file) {\r\n      setFiles({ file: null, valid: false, msg: \"field is required\" });\r\n      flag = false;\r\n    } else if (!file.file.name.endsWith(\".txt\")) {\r\n      setFiles({ file: null, valid: false, msg: \"field must be .txt format\" });\r\n      flag = false;\r\n    }\r\n    if (name.name === \"\") {\r\n      setName({ name: \"\", valid: false });\r\n      flag = false;\r\n    }\r\n    if (text === \"\") {\r\n      setWMsgs({ msg: \"input required\", valid: false });\r\n      flag = false;\r\n    } else {\r\n      const regx = new RegExp(\"/^[a-zA-Z]+$/\");\r\n      for (const str of text.split(\" \")) {\r\n        if (regx.test(str)) {\r\n          setWMsgs({\r\n            msg: `${str} must only contain characters`,\r\n            valid: false,\r\n          });\r\n\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    if (validate(e.target.words.value)) {\r\n      formData.append(\"file\", file.file);\r\n\r\n      formData.append(\"words\", e.target.words.value);\r\n      formData.append(\"model\", name.name);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      axios\r\n        .post(`${api_link}results`, formData, config)\r\n        .then((res) => {\r\n          setTable_data(res.data);\r\n          console.log(res.data);\r\n        })\r\n        .catch((error) => {\r\n          setOpenDialog(true);\r\n          setTitle(\"Error\");\r\n          setStatus(\"error.response.data\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.files);\r\n    setFiles({ file: e.target.files[0], valid: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form className=\"form-inline\" onSubmit={submit}>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              id=\"uplodaer\"\r\n              type=\"file\"\r\n              className={`form-control-file ml-2 ${\r\n                file.valid ? \"\" : \"is-invalid\"\r\n              }`}\r\n              style={{ display: \"none\" }}\r\n              onChange={onChange}\r\n            />\r\n            <label htmlFor=\"uplodaer\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload Training Words File\r\n              </Button>\r\n            </label>\r\n            {!file.valid ? (\r\n              <div className=\"invalid-feedback\"> {file.msg}.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <label htmlFor=\"words\">Comparable Terms: </label>\r\n            <input\r\n              id=\"words\"\r\n              name=\"words\"\r\n              type=\"text\"\r\n              className={`form-control ml-2 ${wMsgs.valid ? \"\" : \"is-invalid\"}`}\r\n              placeholder=\"Words seperated by a comma.\"\r\n            />\r\n            {!wMsgs.valid ? (\r\n              <div className=\"invalid-feedback\">{wMsgs.msg}.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${name.valid ? \"\" : \"is-invalid\"}`}\r\n              placeholder=\"Model Name.\"\r\n              value={name.name}\r\n              readOnly\r\n            />\r\n            {!name.valid ? (\r\n              <div className=\"invalid-feedback\">model name is required.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary \">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"row mt-5\">\r\n        {table_data ? <DenseTable data={table_data} /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\nimport UploadFile from \"./UploadFile\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputForm from \"./InputForm\";\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n};\r\nconst Pannels = ({\r\n  value,\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  return (\r\n    <>\r\n      <TabPanel value={value} index={0}>\r\n        <UploadFile\r\n          modelName={modelName}\r\n          setOpenDialog={setOpenDialog}\r\n          setIsLoading={setIsLoading}\r\n          setPercentCompleted={setPercentCompleted}\r\n          setStatus={setStatus}\r\n          setTitle={setTitle}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InputForm\r\n          modelName={modelName}\r\n          setOpenDialog={setOpenDialog}\r\n          setIsLoading={setIsLoading}\r\n          setPercentCompleted={setPercentCompleted}\r\n          setStatus={setStatus}\r\n          setTitle={setTitle}\r\n        />\r\n      </TabPanel>\r\n    </>\r\n  );\r\n  //   return <UploadFile />;\r\n};\r\n\r\nexport default Pannels;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Icon } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport { api_link } from './api_link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst FullScreenDialog = ({ open, handleClose }) => {\r\n  const [models, setModels] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    Axios.get(`${api_link}models`)\r\n      .then((res) => {\r\n        setModels(res.data);\r\n      })\r\n      .catch((error) => console.log(error.response.data));\r\n  }, []);\r\n  const setvalue = (e) => {\r\n    handleClose(e, e.target.innerText);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={open}\r\n      onClose={handleClose}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Models\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List onClick={setvalue}>\r\n        {models.map((model) => (\r\n          <div key={model}>\r\n            <ListItem button>\r\n              <Icon />\r\n              <ListItemText primary={model} />\r\n            </ListItem>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default FullScreenDialog;\r\n","import EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    display: 'block',\r\n    position: 'fixed',\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(2),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\nconst MyFab = ({ onClick }) => {\r\n  const clazz = useStyles();\r\n  return (\r\n    <Fab\r\n      className={clazz.fab}\r\n      color=\"primary\"\r\n      aria-label=\"edit\"\r\n      onClick={onClick}\r\n      variant=\"extended\"\r\n    >\r\n      <EditIcon className={clazz.extendedIcon} />\r\n      pick Model\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default MyFab;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ProgressDialog = ({\r\n  open,\r\n  title,\r\n  loading,\r\n  status,\r\n  handleClose,\r\n  progress,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      onClick={handleClose}\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        {loading ? (\r\n          <CircularProgress variant=\"determinate\" value={progress} />\r\n        ) : (\r\n          <DialogContentText>\r\n            <Typography>{status}</Typography>\r\n          </DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\">OK</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProgressDialog;\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport Pannels from './Pannels';\r\nimport FullScreenDialog from './FullScreenDialog';\r\nimport MyFab from './MyFab';\r\nimport ProgressDialog from './ProgressDialog';\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [model, setModel] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [percentCompleted, setPercentCompleted] = useState(0);\r\n  const [status, setStatus] = useState('');\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e, text) => {\r\n    if (text) {\r\n      setModel(text);\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeIndex = (e, index) => {\r\n    setValue(index);\r\n  };\r\n  return (\r\n    <>\r\n      <Header value={value} handleChange={handleChangeIndex} />\r\n      <Pannels\r\n        value={value}\r\n        modelName={model}\r\n        setOpenDialog={setOpenDialog}\r\n        setIsLoading={setIsLoading}\r\n        setPercentCompleted={setPercentCompleted}\r\n        setStatus={setStatus}\r\n        setTitle={setTitle}\r\n      />\r\n      <MyFab onClick={handleClickOpen} />\r\n      <FullScreenDialog open={open} handleClose={handleClose} />\r\n      <ProgressDialog\r\n        handleClose={() => setOpenDialog(false)}\r\n        progress={percentCompleted}\r\n        open={openDialog}\r\n        loading={isLoading}\r\n        status={status}\r\n        title={title}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.querySelector('#container')\r\n);\r\n"],"sourceRoot":""}