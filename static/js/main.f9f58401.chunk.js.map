{"version":3,"sources":["Service.js","main components/LogInDialog.js","components/Header.js","components/Table.js","components/LanguageSelector.js","main components/UploadFile.js","components/DataTable.js","main components/InputForm.js","main components/Pannels.js","components/FullScreenDialog.js","components/MyFab.js","components/ProgressDialog.js","main components/App.js","router/AppRouter.js","index.js"],"names":["api_link","setCookie","data","minutes","dt","Date","setMinutes","getMinutes","document","cookie","ServiceObj","form","axios","post","res","defaults","headers","common","token","config","listener","onUploadProgress","get","Authorization","Service","instance","getInstance","object","split","createInstance","LogInDialog","useState","open","setOpen","history","useHistory","handleClose","e","a","preventDefault","FormData","append","target","user","value","password","login","replace","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogTitle","id","onSubmit","DialogContent","DialogContentText","TextField","autoFocus","name","label","type","fullWidth","margin","DialogActions","Button","color","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","a11yProps","index","Header","handleChange","classes","className","AppBar","position","Toolbar","Typography","variant","component","onClick","logOut","Tabs","onChange","aria-label","Tab","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","map","headCell","key","align","TableSortLabel","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","props","removeSekected","clsx","Tooltip","IconButton","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","overflow","top","EnhancedTable","files","removeFile","React","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","size","event","newSelecteds","n","TableBody","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","slice","handleClick","scope","lastModified","toLocaleDateString","edge","fName","filter","removeRow","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","LanguageSelector","lang","langs","setLang","Select","MenuItem","FormHelperText","UploadFile","modelName","setOpenDialog","setIsLoading","setPercentCompleted","setStatus","setTitle","valid","setFiles","msg","setName","useEffect","fs","file","includes","console","log","validate","flag","endsWith","RegExp","test","submit","formData","forEach","progressEvent","percentCompleted","round","loaded","total","sendTrainData","response","error","message","display","set","Set","fls","multiple","htmlFor","placeholder","DenseTable","rows","Object","keys","cols","col","values","k","v","InputForm","wMsgs","setWMsgs","table_data","setTable_data","regx","str","words","sendCompareData","readOnly","TabPanel","children","other","hidden","Box","p","Pannels","appBar","marginLeft","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","models","setModels","getModels","fetchData","fullScreen","onClose","TransitionComponent","List","innerText","model","ListItem","button","Icon","ListItemText","Divider","fab","bottom","right","extendedIcon","MyFab","clazz","Fab","ProgressDialog","loading","status","progress","CircularProgress","App","setValue","setModel","openDialog","isLoading","PrivateRoute","rest","render","location","isLogged","to","pathname","state","from","AppRouter","basename","process","exact","path","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.f9f58401.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst api_link = 'http://132.75.249.68:80';\r\n\r\nconst setCookie = (data, minutes) => {\r\n  const dt = new Date();\r\n  dt.setMinutes(dt.getMinutes() + minutes);\r\n  document.cookie = `user=${data}; expires= ${dt}; path=/;`;\r\n};\r\n\r\nclass ServiceObj {\r\n  async login(form) {\r\n    const res = await axios.post(`${api_link}/login`, form);\r\n    axios.defaults.headers.common['Authorization'] = res.data.token;\r\n    setCookie(res.data.token, 30);\r\n    // , {\r\n    //   withCredentials: true,\r\n    //   headers: {\r\n    //     'Access-Control-Allow-Credentials': true,\r\n    //   },\r\n    // }\r\n    // .then((res) => {\r\n    //     axios.defaults.headers.common['Authorization'] = res.data.token;\r\n\r\n    //     console.log(new Cookies('user'));\r\n\r\n    //   })\r\n\r\n    return true;\r\n  }\r\n\r\n  async sendCompareData(form) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    };\r\n    return await axios.post(`${api_link}/results`, form, config);\r\n  }\r\n\r\n  async sendTrainData(form, listener) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      onUploadProgress: listener,\r\n    };\r\n    return await axios.post(`${api_link}/`, form, config);\r\n  }\r\n\r\n  async getModels() {\r\n    return await axios.get(`${api_link}/models`);\r\n  }\r\n\r\n  isLogged() {\r\n    if (document.cookie) return true;\r\n    else return false;\r\n  }\r\n\r\n  logOut() {\r\n    document.cookie = 'user=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/';\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n}\r\n\r\nconst Service = (function () {\r\n  let instance;\r\n\r\n  function createInstance() {\r\n    const object = new ServiceObj();\r\n\r\n    if (document.cookie) {\r\n      const cookie = document.cookie.split(';')[0];\r\n      const token = cookie.split('=')[1];\r\n      axios.defaults.headers.common['Authorization'] = token;\r\n    }\r\n\r\n    return object;\r\n  }\r\n\r\n  return {\r\n    getInstance: function () {\r\n      if (!instance) {\r\n        instance = createInstance();\r\n      }\r\n      return instance;\r\n    },\r\n  };\r\n})();\r\n\r\nexport default Service.getInstance();\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useHistory } from 'react-router';\r\nimport Service from '../Service';\r\n\r\nconst LogInDialog = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const handleClose = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('username', e.target.user.value);\r\n    data.append('password', e.target.password.value);\r\n    try {\r\n      if (await Service.login(data)) {\r\n        setOpen(false);\r\n        history.replace('/');\r\n      }\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n      <form onSubmit={handleClose}>\r\n        <DialogContent>\r\n          <DialogContentText>Please enter you credintials.</DialogContentText>\r\n\r\n          <TextField\r\n            autoFocus\r\n            name=\"user\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogInDialog;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\nimport Service from '../Service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Header = ({ value, handleChange }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleClck = (e) => {\r\n    Service.logOut();\r\n    history.replace('/login');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} color=\"default\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Word2Vec Utility\r\n          </Typography>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"span\"\r\n            onClick={handleClck}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </Toolbar>\r\n\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Train Model\" {...a11yProps(0)} />\r\n          <Tab label=\"Compare Words\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'File Name',\r\n  },\r\n  { id: 'date', numeric: true, disablePadding: true, label: 'Date Modifed' },\r\n  { id: 'size', numeric: true, disablePadding: true, label: 'File Size' },\r\n  { id: 'delete', numeric: false, disablePadding: true, label: ' ' },\r\n];\r\n\r\nfunction EnhancedTableHead({\r\n  classes,\r\n  onSelectAllClick,\r\n  numSelected,\r\n  rowCount,\r\n}) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >\r\n            <TableSortLabel>{headCell.label}</TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, removeSekected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Files\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={removeSekected}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ files, removeFile, removeSekected }) {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = files.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, files.length - page * rowsPerPage);\r\n\r\n  const remove = () => {\r\n    removeSekected(selected);\r\n    setSelected([]);\r\n  };\r\n\r\n  const removeRow = (fName) => {\r\n    const selectedIndex = selected.indexOf(fName);\r\n\r\n    removeFile([fName]);\r\n    if (selectedIndex >= 0) {\r\n      setSelected(selected.filter((name) => name !== fName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          removeSekected={remove}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              rowCount={files.length}\r\n            />\r\n            <TableBody>\r\n              {files.map((row, index) => {\r\n                const isItemSelected = isSelected(row.name);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={index}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        onChange={(event) => handleClick(event, row.name)}\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      padding=\"none\"\r\n                    >\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {new Date(row.lastModified).toLocaleDateString()}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.size}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => removeRow(row.name)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={files.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst LanguageSelector = ({ lang, langs, setLang }) => {\r\n  const handleChange = (event) => {\r\n    setLang(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel> */}\r\n      <Select\r\n        labelId=\"demo-simple-select-helper-label\"\r\n        id=\"demo-simple-select-helper\"\r\n        value={lang}\r\n        onChange={handleChange}\r\n      >\r\n        {langs.map((lang, index) => (\r\n          <MenuItem key={index} value={lang}>\r\n            {lang}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>Language</FormHelperText>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import React, { useState, useEffect } from 'react';\r\nimport EnhancedTable from '../components/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport LanguageSelector from '../components/LanguageSelector';\r\nimport Service from '../Service';\r\n\r\nconst UploadFile = ({\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  const [files, setFiles] = useState({ files: [], valid: true });\r\n  const [name, setName] = useState({ name: '', valid: true, msg: '' });\r\n  const [lang, setLang] = useState('EN');\r\n\r\n  useEffect(() => {\r\n    setName({ name: modelName, msg: '', valid: true });\r\n  }, [modelName]);\r\n\r\n  const onChange = (e) => {\r\n    const set = new Set([...files.files, ...e.target.files]);\r\n    const fls = [...set];\r\n\r\n    setFiles({ files: fls, valid: true });\r\n  };\r\n\r\n  const removeFile = (e) => {\r\n    const fs = files.files.filter((file) => !e.includes(file.name));\r\n    console.log(e, fs);\r\n    setFiles({ files: fs, valid: true });\r\n  };\r\n\r\n  const validate = () => {\r\n    let flag = true;\r\n    if (files.files.length === 0) {\r\n      setFiles({ files: [], valid: false, msg: 'field is required' });\r\n      flag = false;\r\n    } else {\r\n      for (const f of files.files) {\r\n        if (!f.name.endsWith('.txt')) {\r\n          setFiles({\r\n            files: [],\r\n            valid: false,\r\n            msg: 'all files must .txt format',\r\n          });\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (name.name === '') {\r\n      setName({ name: '', valid: false, msg: 'field is required' });\r\n      flag = false;\r\n    } else {\r\n      const regx = new RegExp('/^[a-zA-Z]+$/');\r\n\r\n      if (regx.test(name.name)) {\r\n        setName({\r\n          name: ``,\r\n          valid: false,\r\n          msg: 'illegal model name must be obly alphabetic characters',\r\n        });\r\n\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    return flag;\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const formData = new FormData();\r\n      files.files.forEach((file) => formData.append(file.name, file));\r\n      formData.append('model', name.name);\r\n      formData.append('lang', lang);\r\n      console.log(formData.get('lang'));\r\n      setOpenDialog(true);\r\n      setIsLoading(true);\r\n      setTitle('Uploadeding Files');\r\n\r\n      const listener = (progressEvent) => {\r\n        let percentCompleted = Math.round(\r\n          (progressEvent.loaded * 100) / progressEvent.total\r\n        );\r\n        setPercentCompleted(percentCompleted);\r\n        if (percentCompleted === 100) setIsLoading(false);\r\n        setStatus(\r\n          \"Files uploaded suucessefully and is being processed, please wait or comeback later! after the model is finished training you'll see its name in the list.\"\r\n        );\r\n        setTitle('Upload sucessfull');\r\n      };\r\n\r\n      try {\r\n        const res = await Service.sendTrainData(formData, listener);\r\n        setIsLoading(false);\r\n        setTitle('Training sucessfull');\r\n        setStatus('Model Trained! Refresh your page to see it in the list.');\r\n      } catch (error) {\r\n        setTitle('Error');\r\n        setIsLoading(false);\r\n        if (error.response) setStatus(error.response.data.error.message);\r\n        else setStatus(error.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form className=\"form-inline\" onSubmit={submit}>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              id=\"uplodaer\"\r\n              type=\"file\"\r\n              className={`form-control-file ml-2 ${\r\n                files.valid ? '' : 'is-invalid'\r\n              }`}\r\n              style={{ display: 'none' }}\r\n              onChange={onChange}\r\n              multiple\r\n            />\r\n            <label htmlFor=\"uplodaer\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload Files\r\n              </Button>\r\n            </label>\r\n            {!files.valid ? (\r\n              <div className=\"invalid-feedback\"> {files.msg}.</div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <label htmlFor=\"model\">Model Name:</label>\r\n            <input\r\n              id=\"model\"\r\n              type=\"text\"\r\n              className={`form-control ml-2 ${name.valid ? '' : 'is-invalid'}`}\r\n              placeholder=\"Type model name or choose an exising model.\"\r\n              value={name.name}\r\n              onChange={(e) =>\r\n                setName({ name: e.target.value, valid: true, msg: '' })\r\n              }\r\n            />\r\n\r\n            {!name.valid ? (\r\n              <div className=\"invalid-feedback\"> {name.msg}.</div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <LanguageSelector\r\n              langs={['EN', 'AR']}\r\n              setLang={setLang}\r\n              lang={lang}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary \">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"row mt-5\">\r\n        <EnhancedTable\r\n          files={files.files}\r\n          removeFile={removeFile}\r\n          removeSekected={removeFile}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function DenseTable({ data }) {\r\n  const classes = useStyles();\r\n  const rows = Object.keys(data);\r\n  const cols = Object.keys(data[rows[0]]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            {cols.map((col, index) => (\r\n              <TableCell key={index} align=\"center\">\r\n                {col}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                {row}\r\n              </TableCell>\r\n              {Object.values(data[row]).map((k, v) => (\r\n                <TableCell key={v} align=\"center\">\r\n                  {k}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DenseTable from \"../components/DataTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport Service from \"../Service\";\r\n\r\nconst InputForm = ({\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  const [name, setName] = useState({ name: \"\", valid: true });\r\n  const [file, setFiles] = useState({ file: null, valid: true });\r\n  const [wMsgs, setWMsgs] = useState({ msg: \"\", valid: true });\r\n  const [table_data, setTable_data] = useState(null);\r\n  const [lang, setLang] = useState(\"EN\");\r\n\r\n  useEffect(() => {\r\n    setName({ name: modelName, valid: true });\r\n  }, [modelName]);\r\n\r\n  const validate = (text) => {\r\n    let flag = true;\r\n    if (!file.file) {\r\n      setFiles({ file: null, valid: false, msg: \"field is required\" });\r\n      flag = false;\r\n    } else if (!file.file.name.endsWith(\".txt\")) {\r\n      setFiles({ file: null, valid: false, msg: \"field must be .txt format\" });\r\n      flag = false;\r\n    }\r\n    if (name.name === \"\") {\r\n      setName({ name: \"\", valid: false });\r\n      flag = false;\r\n    }\r\n    if (text === \"\") {\r\n      setWMsgs({ msg: \"input required\", valid: false });\r\n      flag = false;\r\n    } else {\r\n      const regx = new RegExp(\"/^[a-zA-Z]+$/\");\r\n      for (const str of text.split(\" \")) {\r\n        if (regx.test(str)) {\r\n          setWMsgs({\r\n            msg: `${str} must only contain characters`,\r\n            valid: false,\r\n          });\r\n\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    if (validate(e.target.words.value)) {\r\n      formData.append(\"file\", file.file);\r\n\r\n      formData.append(\"words\", e.target.words.value);\r\n      formData.append(\"model\", name.name);\r\n      formData.append(\"lang\", lang);\r\n\r\n      try {\r\n        const res = await Service.sendCompareData(formData);\r\n        setTable_data(res.data);\r\n      } catch (error) {\r\n        setOpenDialog(true);\r\n        setTitle(\"Error\");\r\n        if (error.response) setStatus(error.response.data.error.message);\r\n        else setStatus(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setFiles({ file: e.target.files[0], valid: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form className=\"form-inline\" onSubmit={submit}>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              id=\"uplodaer\"\r\n              type=\"file\"\r\n              className={`form-control-file ml-2 ${\r\n                file.valid ? \"\" : \"is-invalid\"\r\n              }`}\r\n              style={{ display: \"none\" }}\r\n              onChange={onChange}\r\n            />\r\n            <label htmlFor=\"uplodaer\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload Training Words File\r\n              </Button>\r\n            </label>\r\n            {!file.valid ? (\r\n              <div className=\"invalid-feedback\"> {file.msg}.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <label htmlFor=\"words\">Comparable Terms: </label>\r\n            <input\r\n              id=\"words\"\r\n              name=\"words\"\r\n              type=\"text\"\r\n              className={`form-control ml-2 ${wMsgs.valid ? \"\" : \"is-invalid\"}`}\r\n              placeholder=\"Words seperated by a comma.\"\r\n            />\r\n            {!wMsgs.valid ? (\r\n              <div className=\"invalid-feedback\">{wMsgs.msg}.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${name.valid ? \"\" : \"is-invalid\"}`}\r\n              placeholder=\"Model Name.\"\r\n              value={name.name}\r\n              readOnly\r\n            />\r\n            {!name.valid ? (\r\n              <div className=\"invalid-feedback\">model name is required.</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group mx-sm-3 mb-2\">\r\n            <LanguageSelector\r\n              langs={[\"EN\", \"AR\"]}\r\n              setLang={setLang}\r\n              lang={lang}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary \">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {table_data ? (\r\n        <div className=\"row mt-5\">\r\n          <DenseTable data={table_data} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport UploadFile from './UploadFile';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputForm from './InputForm';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n};\r\nconst Pannels = ({\r\n  value,\r\n  modelName,\r\n  setOpenDialog,\r\n  setIsLoading,\r\n  setPercentCompleted,\r\n  setStatus,\r\n  setTitle,\r\n}) => {\r\n  return (\r\n    <>\r\n      <TabPanel value={value} index={0}>\r\n        <UploadFile\r\n          modelName={modelName}\r\n          setOpenDialog={setOpenDialog}\r\n          setIsLoading={setIsLoading}\r\n          setPercentCompleted={setPercentCompleted}\r\n          setStatus={setStatus}\r\n          setTitle={setTitle}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <InputForm\r\n          modelName={modelName}\r\n          setOpenDialog={setOpenDialog}\r\n          setIsLoading={setIsLoading}\r\n          setPercentCompleted={setPercentCompleted}\r\n          setStatus={setStatus}\r\n          setTitle={setTitle}\r\n        />\r\n      </TabPanel>\r\n    </>\r\n  );\r\n  //   return <UploadFile />;\r\n};\r\n\r\nexport default Pannels;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Icon } from '@material-ui/core';\r\nimport Service from '../Service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst FullScreenDialog = ({\r\n  open,\r\n  handleClose,\r\n  setStatus,\r\n  setTitle,\r\n  setOpenDialog,\r\n}) => {\r\n  const [models, setModels] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await Service.getModels();\r\n        setModels(res.data);\r\n      } catch (error) {\r\n        setOpenDialog(true);\r\n        setTitle('Error');\r\n        if (error.response) setStatus(error.response.data.error.message);\r\n        else setStatus(error.message);\r\n\r\n        // console.log(error.response.data.error.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  const setvalue = (e) => {\r\n    handleClose(e, e.target.innerText);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={open}\r\n      onClose={handleClose}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Models\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <List onClick={setvalue}>\r\n        {models.map((model) => (\r\n          <div key={model}>\r\n            <ListItem button>\r\n              <Icon />\r\n              <ListItemText primary={model} />\r\n            </ListItem>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default FullScreenDialog;\r\n","import EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    display: 'block',\r\n    position: 'fixed',\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(2),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\nconst MyFab = ({ onClick }) => {\r\n  const clazz = useStyles();\r\n  return (\r\n    <Fab\r\n      className={clazz.fab}\r\n      color=\"primary\"\r\n      aria-label=\"edit\"\r\n      onClick={onClick}\r\n      variant=\"extended\"\r\n    >\r\n      <EditIcon className={clazz.extendedIcon} />\r\n      pick Model\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default MyFab;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ProgressDialog = ({\r\n  open,\r\n  title,\r\n  loading,\r\n  status,\r\n  handleClose,\r\n  progress,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        {loading ? (\r\n          <CircularProgress variant=\"determinate\" value={progress} />\r\n        ) : (\r\n          <DialogContentText component={'div'}>\r\n            <Typography component={'p'}>{status}</Typography>\r\n          </DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProgressDialog;\r\n","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Pannels from '../main components/Pannels';\r\nimport FullScreenDialog from '../components/FullScreenDialog';\r\nimport MyFab from '../components/MyFab';\r\nimport ProgressDialog from '../components/ProgressDialog';\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [model, setModel] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [percentCompleted, setPercentCompleted] = useState(0);\r\n  const [status, setStatus] = useState('');\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (e, text) => {\r\n    if (text) {\r\n      setModel(text);\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeIndex = (e, index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header value={value} handleChange={handleChangeIndex} />\r\n      <Pannels\r\n        value={value}\r\n        modelName={model}\r\n        setOpenDialog={setOpenDialog}\r\n        setIsLoading={setIsLoading}\r\n        setPercentCompleted={setPercentCompleted}\r\n        setStatus={setStatus}\r\n        setTitle={setTitle}\r\n      />\r\n      <MyFab onClick={handleClickOpen} />\r\n      <FullScreenDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        setOpenDialog={setOpenDialog}\r\n        setStatus={setStatus}\r\n        setTitle={setTitle}\r\n      />\r\n      <ProgressDialog\r\n        handleClose={() => setOpenDialog(false)}\r\n        progress={percentCompleted}\r\n        open={openDialog}\r\n        loading={isLoading}\r\n        status={status}\r\n        title={title}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport LogInDialog from '../main components/LogInDialog';\r\nimport App from '../main components/App';\r\nimport Service from '../Service';\r\n\r\nconst PrivateRoute = ({ ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        Service.isLogged() ? (\r\n          <App />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" />\r\n        <Route exact path=\"/login\" component={LogInDialog} />\r\n        {/* <Route exact path=\"/home\" component={App} /> */}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AppRouter from './router/AppRouter';\r\n\r\nReactDOM.render(\r\n  <AppRouter />,\r\n\r\n  document.querySelector('#container')\r\n);\r\n"],"sourceRoot":""}